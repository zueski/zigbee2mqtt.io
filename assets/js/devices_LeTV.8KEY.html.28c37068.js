"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[83992],{94600:(e,o,d)=>{d.r(o),d.d(o,{comp:()=>c,data:()=>i});var l=d(23785);const t={},c=(0,d(86670).A)(t,[["render",function(e,o){const d=(0,l.g2)("RouteLink");return(0,l.uX)(),(0,l.CE)("div",null,[o[7]||(o[7]=(0,l.Lk)("h1",{id:"letv-letv-8key",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#letv-letv-8key"},[(0,l.Lk)("span",null,"LeTV LeTV.8KEY")])],-1)),(0,l.Lk)("table",null,[o[6]||(o[6]=(0,l.Lk)("thead",null,[(0,l.Lk)("tr",null,[(0,l.Lk)("th"),(0,l.Lk)("th")])],-1)),(0,l.Lk)("tbody",null,[o[2]||(o[2]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Model"),(0,l.Lk)("td",null,"LeTV.8KEY")],-1)),(0,l.Lk)("tr",null,[o[1]||(o[1]=(0,l.Lk)("td",null,"Vendor",-1)),(0,l.Lk)("td",null,[(0,l.bF)(d,{to:"/supported-devices/#v=LeTV"},{default:(0,l.k6)((()=>o[0]||(o[0]=[(0,l.eW)("LeTV")]))),_:1})])]),o[3]||(o[3]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Description"),(0,l.Lk)("td",null,"8key switch")],-1)),o[4]||(o[4]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Exposes"),(0,l.Lk)("td",null,"action, linkquality")],-1)),o[5]||(o[5]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Picture"),(0,l.Lk)("td",null,[(0,l.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/LeTV.8KEY.png",alt:"LeTV LeTV.8KEY"})])],-1))])]),o[8]||(o[8]=(0,l.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>hold_up</code>, <code>single_up</code>, <code>double_up</code>, <code>tripple_up</code>, <code>hold_down</code>, <code>single_down</code>, <code>double_down</code>, <code>tripple_down</code>, <code>hold_left</code>, <code>single_left</code>, <code>double_left</code>, <code>tripple_left</code>, <code>hold_right</code>, <code>single_right</code>, <code>double_right</code>, <code>tripple_right</code>, <code>hold_center</code>, <code>single_center</code>, <code>double_center</code>, <code>tripple_center</code>, <code>hold_back</code>, <code>single_back</code>, <code>double_back</code>, <code>tripple_back</code>, <code>hold_play</code>, <code>single_play</code>, <code>double_play</code>, <code>tripple_play</code>, <code>hold_voice</code>, <code>single_voice</code>, <code>double_voice</code>, <code>tripple_voice</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric"><span>Linkquality (numeric)</span></a></h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',5))])}]]),i=JSON.parse('{"path":"/devices/LeTV.8KEY.html","title":"LeTV LeTV.8KEY control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"LeTV LeTV.8KEY control via MQTT","description":"Integrate your LeTV LeTV.8KEY via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-09-30T20:52:56.000Z"},"headers":[{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Action (enum)","slug":"action-enum","link":"#action-enum","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1727204311000},"filePathRelative":"devices/LeTV.8KEY.md"}')}}]);