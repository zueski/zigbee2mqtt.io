"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[55216],{16264:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>n,data:()=>o});var l=a(23785);const s={},n=(0,a(86670).A)(s,[["render",function(e,t){const a=(0,l.g2)("RouteLink");return(0,l.uX)(),(0,l.CE)("div",null,[t[8]||(t[8]=(0,l.Lk)("h1",{id:"tuya-ts0601-smoke-3",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#tuya-ts0601-smoke-3"},[(0,l.Lk)("span",null,"Tuya TS0601_smoke_3")])],-1)),(0,l.Lk)("table",null,[t[7]||(t[7]=(0,l.Lk)("thead",null,[(0,l.Lk)("tr",null,[(0,l.Lk)("th"),(0,l.Lk)("th")])],-1)),(0,l.Lk)("tbody",null,[t[2]||(t[2]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Model"),(0,l.Lk)("td",null,"TS0601_smoke_3")],-1)),(0,l.Lk)("tr",null,[t[1]||(t[1]=(0,l.Lk)("td",null,"Vendor",-1)),(0,l.Lk)("td",null,[(0,l.bF)(a,{to:"/supported-devices/#v=Tuya"},{default:(0,l.k6)((()=>t[0]||(t[0]=[(0,l.eW)("Tuya")]))),_:1})])]),t[3]||(t[3]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Description"),(0,l.Lk)("td",null,"Photoelectric smoke detector")],-1)),t[4]||(t[4]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Exposes"),(0,l.Lk)("td",null,"smoke, battery_state, linkquality")],-1)),t[5]||(t[5]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Picture"),(0,l.Lk)("td",null,[(0,l.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/TS0601_smoke_3.png",alt:"Tuya TS0601_smoke_3"})])],-1)),t[6]||(t[6]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"White-label"),(0,l.Lk)("td",null,"KnockautX SMOAL024")],-1))])]),t[9]||(t[9]=(0,l.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="smoke-binary" tabindex="-1"><a class="header-anchor" href="#smoke-binary"><span>Smoke (binary)</span></a></h3><p>Indicates whether the device detected smoke. Value can be found in the published state on the <code>smoke</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> smoke is ON, if <code>false</code> OFF.</p><h3 id="battery-state-enum" tabindex="-1"><a class="header-anchor" href="#battery-state-enum"><span>Battery state (enum)</span></a></h3><p>State of the battery. Value can be found in the published state on the <code>battery_state</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>low</code>, <code>medium</code>, <code>high</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric"><span>Linkquality (numeric)</span></a></h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',7))])}]]),o=JSON.parse('{"path":"/devices/TS0601_smoke_3.html","title":"Tuya TS0601_smoke_3 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya TS0601_smoke_3 control via MQTT","description":"Integrate your Tuya TS0601_smoke_3 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-04-27T17:39:26.000Z"},"headers":[{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Smoke (binary)","slug":"smoke-binary","link":"#smoke-binary","children":[]},{"level":3,"title":"Battery state (enum)","slug":"battery-state-enum","link":"#battery-state-enum","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1727204311000},"filePathRelative":"devices/TS0601_smoke_3.md"}')}}]);