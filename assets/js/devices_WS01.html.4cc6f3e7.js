"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[94545],{6721:(e,i,n)=>{n.r(i),n.d(i,{comp:()=>a,data:()=>r});var t=n(23785);const l={},a=(0,n(86670).A)(l,[["render",function(e,i){const n=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[i[7]||(i[7]=(0,t.Lk)("h1",{id:"ewelink-ws01",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#ewelink-ws01"},[(0,t.Lk)("span",null,"eWeLink WS01")])],-1)),(0,t.Lk)("table",null,[i[6]||(i[6]=(0,t.Lk)("thead",null,[(0,t.Lk)("tr",null,[(0,t.Lk)("th"),(0,t.Lk)("th")])],-1)),(0,t.Lk)("tbody",null,[i[2]||(i[2]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Model"),(0,t.Lk)("td",null,"WS01")],-1)),(0,t.Lk)("tr",null,[i[1]||(i[1]=(0,t.Lk)("td",null,"Vendor",-1)),(0,t.Lk)("td",null,[(0,t.bF)(n,{to:"/supported-devices/#v=eWeLink"},{default:(0,t.k6)((()=>i[0]||(i[0]=[(0,t.eW)("eWeLink")]))),_:1})])]),i[3]||(i[3]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Description"),(0,t.Lk)("td",null,"Rainfall sensor")],-1)),i[4]||(i[4]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Exposes"),(0,t.Lk)("td",null,"rain, linkquality")],-1)),i[5]||(i[5]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Picture"),(0,t.Lk)("td",null,[(0,t.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/WS01.png",alt:"eWeLink WS01"})])],-1))])]),i[8]||(i[8]=(0,t.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="rain-binary" tabindex="-1"><a class="header-anchor" href="#rain-binary"><span>Rain (binary)</span></a></h3><p>Indicates whether the device detected rainfall. Value can be found in the published state on the <code>rain</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> rain is ON, if <code>false</code> OFF.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric"><span>Linkquality (numeric)</span></a></h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',5))])}]]),r=JSON.parse('{"path":"/devices/WS01.html","title":"eWeLink WS01 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"eWeLink WS01 control via MQTT","description":"Integrate your eWeLink WS01 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-02-01T14:45:57.000Z"},"headers":[{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Rain (binary)","slug":"rain-binary","link":"#rain-binary","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1727204311000},"filePathRelative":"devices/WS01.md"}')}}]);