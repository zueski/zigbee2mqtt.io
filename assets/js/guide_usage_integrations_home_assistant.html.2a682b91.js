"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[15485],{25018:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>p,data:()=>c});var e=a(23785);const t=a.p+"assets/img/home_assistant_change_name.72aae626.png",i=a.p+"assets/img/home_assistant_device_registry.d82585b5.png",l={},p=(0,a(86670).A)(l,[["render",function(n,s){const a=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[s[17]||(s[17]=(0,e.Fv)('<h1 id="home-assistant" tabindex="-1"><a class="header-anchor" href="#home-assistant"><span>Home Assistant</span></a></h1><h2 id="mqtt-discovery" tabindex="-1"><a class="header-anchor" href="#mqtt-discovery"><span>MQTT discovery</span></a></h2><p>The easiest way to integrate Zigbee2MQTT with Home Assistant is by using <a href="https://www.home-assistant.io/integrations/mqtt#mqtt-discovery" target="_blank" rel="noopener noreferrer">MQTT discovery</a>. This allows Zigbee2MQTT to automatically add devices to Home Assistant.</p><p>To achieve the best possible integration (including MQTT discovery):</p><ul><li>In your <strong>Zigbee2MQTT</strong> <code>configuration.yaml</code> set <code>homeassistant: true</code></li><li>Enable the <a href="https://www.home-assistant.io/integrations/mqtt/" target="_blank" rel="noopener noreferrer">MQTT integration</a> in Home Assistant</li></ul><h2 id="device-group-page" tabindex="-1"><a class="header-anchor" href="#device-group-page"><span>Device/group page</span></a></h2>',6)),(0,e.Lk)("p",null,[s[1]||(s[1]=(0,e.eW)("Since Home Assistant 2021.11 the device/group page in Home Assistant can directly link to the frontend (")),s[2]||(s[2]=(0,e.Lk)("em",null,"Visit device",-1)),s[3]||(s[3]=(0,e.eW)(" button). To enable this set the ")),s[4]||(s[4]=(0,e.Lk)("code",null,"url",-1)),s[5]||(s[5]=(0,e.eW)(" in the ")),(0,e.bF)(a,{to:"/guide/configuration/frontend.html"},{default:(0,e.k6)((()=>s[0]||(s[0]=[(0,e.eW)("frontend")]))),_:1}),s[6]||(s[6]=(0,e.eW)(" configuration."))]),s[18]||(s[18]=(0,e.Fv)('<h2 id="home-assistant-device-registry" tabindex="-1"><a class="header-anchor" href="#home-assistant-device-registry"><span>Home Assistant device registry</span></a></h2><p>When using Home Assistant MQTT discovery, Zigbee2MQTT integrates with the <a href="https://developers.home-assistant.io/docs/en/device_registry_index.html" target="_blank" rel="noopener noreferrer">Home Assistant device registry</a>. This allows you to change the Home Assistant <code>entity_id</code> and <code>friendly_name</code> from the Home Assistant web interface without having to restart Home Assistant. It also makes it possible to show which entities belong to which device.</p><p><img src="'+t+'" alt="Changing name and device ID via web interface"></p><p><img src="'+i+'" alt="Device registry"></p><h2 id="customizing-discovery" tabindex="-1"><a class="header-anchor" href="#customizing-discovery"><span>Customizing discovery</span></a></h2>',5)),(0,e.Lk)("p",null,[s[8]||(s[8]=(0,e.eW)("The device specific configuration allows you to modify the discovery payload. Here you can also prevent a device from being discovered. See ")),(0,e.bF)(a,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,e.k6)((()=>s[7]||(s[7]=[(0,e.eW)("Device specific configuration")]))),_:1}),s[9]||(s[9]=(0,e.eW)(" for the available options."))]),s[19]||(s[19]=(0,e.Fv)('<h2 id="responding-to-button-clicks" tabindex="-1"><a class="header-anchor" href="#responding-to-button-clicks"><span>Responding to button clicks</span></a></h2><p>To respond to button clicks (e.g. WXKG01LM) you can use one of the following three Home Assistant configurations.</p><h3 id="via-mqtt-device-trigger-recommended" tabindex="-1"><a class="header-anchor" href="#via-mqtt-device-trigger-recommended"><span>Via MQTT device trigger (recommended)</span></a></h3><p><a href="https://www.home-assistant.io/integrations/device_trigger.mqtt/" target="_blank" rel="noopener noreferrer">MQTT device trigger</a> is the recommended way to respond to button clicks. The MQTT device triggers are discovered by Zigbee2MQTT <strong>once the event is triggered on the device at least once</strong>.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">automation</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">alias</span><span class="token punctuation">:</span> Respond to button click</span>\n<span class="line">      <span class="token key atrule">trigger</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">device_id</span><span class="token punctuation">:</span> ad44cabee4c646f493814306aa6446e1</span>\n<span class="line">            <span class="token key atrule">discovery_id</span><span class="token punctuation">:</span> 0x000b57fffecb472d action_arrow_left_click</span>\n<span class="line">            <span class="token key atrule">domain</span><span class="token punctuation">:</span> mqtt</span>\n<span class="line">            <span class="token key atrule">platform</span><span class="token punctuation">:</span> device</span>\n<span class="line">            <span class="token key atrule">subtype</span><span class="token punctuation">:</span> arrow_left_click</span>\n<span class="line">            <span class="token key atrule">type</span><span class="token punctuation">:</span> action</span>\n<span class="line">      <span class="token key atrule">action</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> light.my_bulb_light</span>\n<span class="line">          <span class="token key atrule">service</span><span class="token punctuation">:</span> light.toggle</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5)),(0,e.Lk)("p",null,[s[11]||(s[11]=(0,e.eW)("If you only plan to use this and want to disable the ")),s[12]||(s[12]=(0,e.Lk)("em",null,"Via Home Assistant entity",-1)),s[13]||(s[13]=(0,e.eW)(" integration below, set ")),s[14]||(s[14]=(0,e.Lk)("code",null,"homeassistant: {legacy_triggers: false}",-1)),s[15]||(s[15]=(0,e.eW)(" (see ")),(0,e.bF)(a,{to:"/guide/configuration/homeassistant.html"},{default:(0,e.k6)((()=>s[10]||(s[10]=[(0,e.eW)("Configuration")]))),_:1}),s[16]||(s[16]=(0,e.eW)(" for more info)."))]),s[20]||(s[20]=(0,e.Fv)('<h3 id="via-home-assistant-entity" tabindex="-1"><a class="header-anchor" href="#via-home-assistant-entity"><span>Via Home Assistant entity</span></a></h3><p>This method work by responding to the state change event of a sensor.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">automation</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">alias</span><span class="token punctuation">:</span> Respond to button click</span>\n<span class="line">      <span class="token key atrule">trigger</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">platform</span><span class="token punctuation">:</span> state</span>\n<span class="line">          <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> sensor.my_switch_click</span>\n<span class="line">          <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token string">&#39;single&#39;</span></span>\n<span class="line">      <span class="token key atrule">action</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> light.my_bulb_light</span>\n<span class="line">          <span class="token key atrule">service</span><span class="token punctuation">:</span> light.toggle</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="via-mqtt" tabindex="-1"><a class="header-anchor" href="#via-mqtt"><span>Via MQTT</span></a></h3><p>As an alternative to the above way of integrating, you can also listen to MQTT topics.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">automation</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">alias</span><span class="token punctuation">:</span> Respond to button clicks</span>\n<span class="line">      <span class="token key atrule">trigger</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt</span>\n<span class="line">          <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">&#39;zigbee2mqtt/&lt;FRIENDLY_NAME&#39;</span></span>\n<span class="line">      <span class="token key atrule">condition</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">condition</span><span class="token punctuation">:</span> template</span>\n<span class="line">          <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ &quot;single&quot; == trigger.payload_json.click }}&#39;</span></span>\n<span class="line">      <span class="token key atrule">action</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> light.bedroom</span>\n<span class="line">          <span class="token key atrule">service</span><span class="token punctuation">:</span> light.toggle</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="groups" tabindex="-1"><a class="header-anchor" href="#groups"><span>Groups</span></a></h2><p>Groups discovery is supported for groups of lights, switches, locks and covers. For other types you have to manually create a config in the Home Assistant <code>configuration.yaml</code>.</p><h2 id="overriding-discovery-properties" tabindex="-1"><a class="header-anchor" href="#overriding-discovery-properties"><span>Overriding discovery properties</span></a></h2><p>Any Home Assistant MQTT discovery property can be overridden on a device. Two examples are shown below. For a full and current list of discovery properties, see <a href="https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery" target="_blank" rel="noopener noreferrer">the Home Assistant MQTT Discovery integration</a> and <a href="https://github.com/Koenkk/zigbee2mqtt/blob/03ba647dc6b5f299f8f3ab441712999fcb3a253e/lib/extension/homeassistant.ts" target="_blank" rel="noopener noreferrer">the Home Assistant extension</a> in the Zigbee2MQTT source code.</p><h3 id="changing-supported-color-modes" tabindex="-1"><a class="header-anchor" href="#changing-supported-color-modes"><span>Changing <code>supported_color_modes</code></span></a></h3><p>This is useful for switching light bulbs from reporting values from X/Y (which is the default) to reporting in hue / saturation (which is what bulbs report color in when changing via hue or saturation, such as with the <code>hue_move</code> and <code>saturation_move</code> commands).</p><p>This example changes a <a href="https://www.home-assistant.io/integrations/light.mqtt/#supported_color_modes" target="_blank" rel="noopener noreferrer">light&#39;s <code>supported_color_modes</code> discovery property</a> to hue / saturation and color temperature:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">devices</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">&#39;0x12345678&#39;</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> my_light</span>\n<span class="line">        <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">light</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">supported_color_modes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;hs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;color_temp&#39;</span><span class="token punctuation">]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exposing-switch-as-a-light" tabindex="-1"><a class="header-anchor" href="#exposing-switch-as-a-light"><span>Exposing switch as a light</span></a></h3><p>If your device is currently discovered as a switch and you want to discover it as a light, the following config in the Zigbee2MQTT <code>configuration.yaml</code> can be used:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">devices</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">&#39;0x12345678&#39;</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> my_switch</span>\n<span class="line">        <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">switch</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">type</span><span class="token punctuation">:</span> light</span>\n<span class="line">                <span class="token key atrule">object_id</span><span class="token punctuation">:</span> light</span>\n<span class="line">            <span class="token key atrule">light</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token null important">null</span></span>\n<span class="line">                <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token null important">null</span></span>\n<span class="line">                <span class="token key atrule">state_value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ value_json.state }}&#39;</span></span>\n<span class="line">            <span class="token comment"># OR if your devices has multiple endpoints (e.g. left/right)</span></span>\n<span class="line">            <span class="token key atrule">switch_left</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">type</span><span class="token punctuation">:</span> light</span>\n<span class="line">                <span class="token key atrule">object_id</span><span class="token punctuation">:</span> light_left</span>\n<span class="line">            <span class="token key atrule">light_left</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">name</span><span class="token punctuation">:</span> my_switch_left</span>\n<span class="line">                <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token null important">null</span></span>\n<span class="line">                <span class="token key atrule">state_value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ value_json.state_left }}&#39;</span></span>\n<span class="line">            <span class="token key atrule">switch_right</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">type</span><span class="token punctuation">:</span> light</span>\n<span class="line">                <span class="token key atrule">object_id</span><span class="token punctuation">:</span> light_right</span>\n<span class="line">            <span class="token key atrule">light_right</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">name</span><span class="token punctuation">:</span> my_switch_right</span>\n<span class="line">                <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token null important">null</span></span>\n<span class="line">                <span class="token key atrule">state_value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ value_json.state_right }}&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changing-device-properties" tabindex="-1"><a class="header-anchor" href="#changing-device-properties"><span>Changing device properties</span></a></h3><p>As an advanced example to show changing any MQTT property can be overridden, the following configuration changes the <code>suggested_area</code> property of the <code>device</code>. The example shows that you can just copy the given MQTT discovery hierarchy underneath the <code>homeassistant</code> property (given that <code>suggested_area</code> is underneath the <code>device</code> property). Please note, that other <code>device</code> properties are possibly set by Zigbee2MQTT (e.g. <code>manufacturer</code>).</p><p>This example changes the <a href="https://www.home-assistant.io/integrations/light.mqtt/#device" target="_blank" rel="noopener noreferrer">light&#39;s device&#39;s <code>suggested area</code> discovery property</a> to &quot;Living Room&quot;:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">devices</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">&#39;0x12345678&#39;</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> my_light</span>\n<span class="line">        <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">device</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">suggested_area</span><span class="token punctuation">:</span> <span class="token string">&#39;Living Room&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-a-custom-name-for-the-device-and-entities" tabindex="-1"><a class="header-anchor" href="#using-a-custom-name-for-the-device-and-entities"><span>Using a custom name for the device and entities</span></a></h2><p>In order to get a more readable name for the device and entities in Home Assistant, a specific name for Home Assistant can be set in the device configuration. If set, this name will be used instead of <code>friendly_name</code>.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">devices</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">&#39;0x12345678&#39;</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> living_room/temperature_sensor</span>\n<span class="line">        <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">name</span><span class="token punctuation">:</span> Living Room Temperature Sensor</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="controlling-zigbee2mqtt-via-home-assistant" tabindex="-1"><a class="header-anchor" href="#controlling-zigbee2mqtt-via-home-assistant"><span>Controlling Zigbee2MQTT via Home Assistant</span></a></h2><p>The following Home Assistant configuration allows you to control Zigbee2MQTT from Home Assistant.</p><p>You can add it to the appropriate section of your <code>configuration.yaml</code>, or you can add it as a <a href="https://www.home-assistant.io/docs/configuration/packages/" target="_blank" rel="noopener noreferrer">Home Assistant Package</a> by adding the following to <code>zigbee2mqtt.yaml</code> in your packages folder.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># Input number for joining time remaining (in minutes)</span></span>\n<span class="line"><span class="token key atrule">input_number</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_join_minutes</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;Zigbee2MQTT join minutes&#39;</span></span>\n<span class="line">        <span class="token key atrule">initial</span><span class="token punctuation">:</span> <span class="token number">2</span></span>\n<span class="line">        <span class="token key atrule">min</span><span class="token punctuation">:</span> <span class="token number">1</span></span>\n<span class="line">        <span class="token key atrule">max</span><span class="token punctuation">:</span> <span class="token number">5</span></span>\n<span class="line">        <span class="token key atrule">step</span><span class="token punctuation">:</span> <span class="token number">1</span></span>\n<span class="line">        <span class="token key atrule">mode</span><span class="token punctuation">:</span> slider</span>\n<span class="line"></span>\n<span class="line"><span class="token comment"># Input text to input Zigbee2MQTT friendly_name for scripts</span></span>\n<span class="line"><span class="token key atrule">input_text</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_new_name</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT New Name</span>\n<span class="line">        <span class="token key atrule">initial</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span></span>\n<span class="line">        <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&#39;mdi:moon-new&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment"># Input select for choosing Zigbee2MQTT devices</span></span>\n<span class="line"><span class="token key atrule">input_select</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_old_name_select</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT Old Name</span>\n<span class="line">        <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&#39;mdi:moon-full&#39;</span></span>\n<span class="line">        <span class="token key atrule">options</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token punctuation">-</span> Initial Option</span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_remove_select</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT Remove</span>\n<span class="line">        <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&#39;mdi:trash-can&#39;</span></span>\n<span class="line">        <span class="token key atrule">options</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token punctuation">-</span> Initial Option</span>\n<span class="line"></span>\n<span class="line"><span class="token comment"># Input boolean to set the force remove flag for devices</span></span>\n<span class="line"><span class="token key atrule">input_boolean</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_force_remove</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT Force Remove</span>\n<span class="line">        <span class="token key atrule">initial</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>\n<span class="line">        <span class="token key atrule">icon</span><span class="token punctuation">:</span> mdi<span class="token punctuation">:</span>alert<span class="token punctuation">-</span>remove</span>\n<span class="line"></span>\n<span class="line"><span class="token comment"># Scripts for renaming &amp; removing devices</span></span>\n<span class="line"><span class="token key atrule">script</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_rename</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">alias</span><span class="token punctuation">:</span> Zigbee2MQTT Rename</span>\n<span class="line">        <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&#39;mdi:pencil&#39;</span></span>\n<span class="line">        <span class="token key atrule">sequence</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">service</span><span class="token punctuation">:</span> mqtt.publish</span>\n<span class="line">            <span class="token key atrule">data_template</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/request/device/rename</span>\n<span class="line">                <span class="token key atrule">payload_template</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span></span>\n<span class="line">                    <span class="token punctuation">{</span></span>\n<span class="line">                      <span class="token key atrule">&quot;from&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ states(&#39;input_select.zigbee2mqtt_old_name_select&#39;) }}&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">                      <span class="token key atrule">&quot;to&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ states(&#39;input_text.zigbee2mqtt_new_name&#39;) }}&quot;</span></span>\n<span class="line">                    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token key atrule">zigbee2mqtt_remove</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token key atrule">alias</span><span class="token punctuation">:</span> Zigbee2MQTT Remove</span>\n<span class="line">        <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&#39;mdi:trash-can&#39;</span></span>\n<span class="line">        <span class="token key atrule">sequence</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">service</span><span class="token punctuation">:</span> mqtt.publish</span>\n<span class="line">            <span class="token key atrule">data_template</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/request/device/remove</span>\n<span class="line">                <span class="token key atrule">payload_template</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span></span>\n<span class="line">                    <span class="token punctuation">{</span></span>\n<span class="line">                      <span class="token key atrule">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ states(&#39;input_select.zigbee2mqtt_remove_select&#39;) }}&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">                      <span class="token key atrule">&quot;force&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> is_state(&#39;input_boolean.zigbee2mqtt_force_remove&#39;<span class="token punctuation">,</span> &#39;on&#39;) <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="line">                    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token key atrule">automation</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">&#39;zigbee2mqtt_create_notification_on_successful_interview&#39;</span></span>\n<span class="line">      <span class="token key atrule">alias</span><span class="token punctuation">:</span> Zigbee Device Joined Notification</span>\n<span class="line">      <span class="token key atrule">trigger</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt</span>\n<span class="line">          <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">&#39;zigbee2mqtt/bridge/event&#39;</span></span>\n<span class="line">      <span class="token key atrule">condition</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token key atrule">condition</span><span class="token punctuation">:</span> template</span>\n<span class="line">          <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{trigger.payload_json.type == &quot;device_interview&quot; and trigger.payload_json.data.status == &quot;successful&quot; and trigger.payload_json.data.supported}}&#39;</span></span>\n<span class="line">      <span class="token key atrule">action</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> persistent_notification.create</span>\n<span class="line">            <span class="token key atrule">data_template</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">title</span><span class="token punctuation">:</span> Device joined the Zigbee2MQTT network</span>\n<span class="line">                <span class="token key atrule">message</span><span class="token punctuation">:</span> &#39;Name<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.friendly_name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">                    <span class="token key atrule">Vendor</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.definition.vendor<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">                    <span class="token key atrule">Model</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.definition.model<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">                    <span class="token key atrule">Description</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.definition.description<span class="token punctuation">}</span><span class="token punctuation">}</span>&#39;</span>\n<span class="line"></span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">&#39;zigbee2mqtt_update_devices_list&#39;</span></span>\n<span class="line">      <span class="token key atrule">alias</span><span class="token punctuation">:</span> Update Zigbee Devices List</span>\n<span class="line">      <span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span></span>\n<span class="line">      <span class="token key atrule">trigger</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt</span>\n<span class="line">            <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/event</span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt</span>\n<span class="line">            <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/response/device/rename</span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> homeassistant</span>\n<span class="line">            <span class="token key atrule">event</span><span class="token punctuation">:</span> start</span>\n<span class="line">      <span class="token key atrule">condition</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="line">      <span class="token key atrule">action</span><span class="token punctuation">:</span></span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">delay</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">hours</span><span class="token punctuation">:</span> <span class="token number">0</span></span>\n<span class="line">                <span class="token key atrule">minutes</span><span class="token punctuation">:</span> <span class="token number">0</span></span>\n<span class="line">                <span class="token key atrule">seconds</span><span class="token punctuation">:</span> <span class="token number">1</span></span>\n<span class="line">                <span class="token key atrule">milliseconds</span><span class="token punctuation">:</span> <span class="token number">0</span></span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> input_select.set_options</span>\n<span class="line">            <span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line">            <span class="token key atrule">data</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">options</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>\n<span class="line">                    {%- set find_integration = &#39;mqtt&#39; %} </span>\n<span class="line">                     {%- set devices = states | map(attribute=&#39;entity_id&#39;) | map(&#39;device_id&#39;) | unique | reject(&#39;eq&#39;,None) | list %}</span>\n<span class="line">                     {%- set ns = namespace(entities = []) %}</span>\n<span class="line">                     {%- for device in devices if device_attr(device, &#39;identifiers&#39;) %}</span>\n<span class="line">                       {%- set ids = device_attr(device, &#39;identifiers&#39;) | list | first %}</span>\n<span class="line">                       {%- if ids and ids | length == 2 and ids[0] == find_integration and &quot;zigbee2mqtt&quot; in ids[1] %}</span>\n<span class="line">                         {% set names = device_attr(device, &#39;name&#39;).split(&#39;\\n&#39;) | list %}</span>\n<span class="line">                         {%- set ns.entities = ns.entities + names %}</span>\n<span class="line">                       {%- endif %}</span>\n<span class="line">                     {%- endfor %}</span>\n<span class="line">                     {{ ns.entities}}</span></span>\n<span class="line">            <span class="token key atrule">target</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">entity_id</span><span class="token punctuation">:</span></span>\n<span class="line">                    <span class="token punctuation">-</span> input_select.zigbee2mqtt_old_name_select</span>\n<span class="line">                    <span class="token punctuation">-</span> input_select.zigbee2mqtt_remove_select</span>\n<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> input_text.set_value</span>\n<span class="line">            <span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line">            <span class="token key atrule">data</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span></span>\n<span class="line">            <span class="token key atrule">target</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> input_text.zigbee2mqtt_new_name</span>\n<span class="line">      <span class="token key atrule">mode</span><span class="token punctuation">:</span> single</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following is an example lovelace card configuration.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">title</span><span class="token punctuation">:</span> Zigbee2MQTT</span>\n<span class="line"><span class="token key atrule">type</span><span class="token punctuation">:</span> entities</span>\n<span class="line"><span class="token key atrule">show_header_toggle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>\n<span class="line"><span class="token key atrule">entities</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> binary_sensor.zigbee2mqtt_bridge_connection_state</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> sensor.zigbee2mqtt_bridge_version</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> sensor.zigbee2mqtt_bridge_coordinator_version</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> divider</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> switch.zigbee2mqtt_bridge_permit_join</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_number.zigbee2mqtt_join_minutes</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> sensor.zigbee2mqtt_bridge_permit_join_timeout</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> divider</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_select.zigbee2mqtt_old_name_select</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_text.zigbee2mqtt_new_name</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> script.zigbee2mqtt_rename</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> divider</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_select.zigbee2mqtt_remove_select</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_boolean.zigbee2mqtt_force_remove</span>\n<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> script.zigbee2mqtt_remove</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="zigbee-network-map-custom-card" tabindex="-1"><a class="header-anchor" href="#zigbee-network-map-custom-card"><span>Zigbee Network Map (Custom Card)</span></a></h2><p><a href="https://github.com/azuwis/zigbee2mqtt-networkmap/" target="_blank" rel="noopener noreferrer">Zigbee Network Map Home Assistant Custom Card</a>.</p>',32))])}]]),c=JSON.parse('{"path":"/guide/usage/integrations/home_assistant.html","title":"Home Assistant","lang":"en-US","frontmatter":{"pageClass":"content-page","sidebar":"auto"},"headers":[{"level":2,"title":"MQTT discovery","slug":"mqtt-discovery","link":"#mqtt-discovery","children":[]},{"level":2,"title":"Device/group page","slug":"device-group-page","link":"#device-group-page","children":[]},{"level":2,"title":"Home Assistant device registry","slug":"home-assistant-device-registry","link":"#home-assistant-device-registry","children":[]},{"level":2,"title":"Customizing discovery","slug":"customizing-discovery","link":"#customizing-discovery","children":[]},{"level":2,"title":"Responding to button clicks","slug":"responding-to-button-clicks","link":"#responding-to-button-clicks","children":[{"level":3,"title":"Via MQTT device trigger (recommended)","slug":"via-mqtt-device-trigger-recommended","link":"#via-mqtt-device-trigger-recommended","children":[]},{"level":3,"title":"Via Home Assistant entity","slug":"via-home-assistant-entity","link":"#via-home-assistant-entity","children":[]},{"level":3,"title":"Via MQTT","slug":"via-mqtt","link":"#via-mqtt","children":[]}]},{"level":2,"title":"Groups","slug":"groups","link":"#groups","children":[]},{"level":2,"title":"Overriding discovery properties","slug":"overriding-discovery-properties","link":"#overriding-discovery-properties","children":[{"level":3,"title":"Changing supported_color_modes","slug":"changing-supported-color-modes","link":"#changing-supported-color-modes","children":[]},{"level":3,"title":"Exposing switch as a light","slug":"exposing-switch-as-a-light","link":"#exposing-switch-as-a-light","children":[]},{"level":3,"title":"Changing device properties","slug":"changing-device-properties","link":"#changing-device-properties","children":[]}]},{"level":2,"title":"Using a custom name for the device and entities","slug":"using-a-custom-name-for-the-device-and-entities","link":"#using-a-custom-name-for-the-device-and-entities","children":[]},{"level":2,"title":"Controlling Zigbee2MQTT via Home Assistant","slug":"controlling-zigbee2mqtt-via-home-assistant","link":"#controlling-zigbee2mqtt-via-home-assistant","children":[]},{"level":2,"title":"Zigbee Network Map (Custom Card)","slug":"zigbee-network-map-custom-card","link":"#zigbee-network-map-custom-card","children":[]}],"git":{"updatedTime":1727204311000},"filePathRelative":"guide/usage/integrations/home_assistant.md"}')}}]);